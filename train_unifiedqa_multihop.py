# -*- coding: utf-8 -*-
"""train_unifiedQA_multihop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t1GToDwdic3cs3kOEVoRTJ0mm3c9Qdj8

# Load UnifiedQA
"""

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, Seq2SeqTrainer, Seq2SeqTrainingArguments
from datasets import load_dataset, DatasetDict, Dataset
import torch

model_name = "allenai/unifiedqa-t5-small"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)

"""# HOTPOTQA PREPROCESING"""

dataset_hotpot = load_dataset("hotpotqa/hotpot_qa", "distractor")

train_ds_hotpot = dataset_hotpot["train"]
train_df_hotpot = train_ds_hotpot.to_pandas().sample(n=20000, random_state=42).reset_index(drop=True)

val_ds_hotpot = dataset_hotpot["validation"]
val_df_hotpot = val_ds_hotpot.to_pandas().sample(n=3000, random_state=40).reset_index(drop=True)

def stringify_context(context_json):
    """
    Converts the HotpotQA context into a single string without internal quotes.
    """
    titles = context_json.get("title", [])
    sentences_list = context_json.get("sentences", [])
    parts = []
    for t, sents in zip(titles, sentences_list):
        # Remove inner quotes from each sentence
        clean_sents = [sent.replace('"', '').replace("'", "") for sent in sents]
        # Join all sentences for this title
        parts.append(f"{t}: " + " ".join(clean_sents))
    # Join all title blocks into a single string and wrap with one outer quote
    return '"' + " \n ".join(parts)

def preprocess_hotpot(df):
  df['context_str'] = df['context'].apply(stringify_context)
  df['input_text'] = df.apply(
      lambda row: f"{row['question']} \n {row['context_str']}", axis=1
  )
  # Keep only input_text and target_text
  preprocessed_df = df[['input_text']].copy()
  preprocessed_df['target_text'] = df['answer']
  return preprocessed_df

preprocessed_df_train = preprocess_hotpot(train_df_hotpot)
preprocessed_df_val = preprocess_hotpot(val_df_hotpot)

def run_model(input_string, **generator_args):
    input_ids = tokenizer.encode(input_string, return_tensors="pt")
    res = model.generate(input_ids, **generator_args)
    return tokenizer.batch_decode(res, skip_special_tokens=True)

# import pandas as pd
# pd.set_option('display.max_colwidth', None)
# print(preprocessed_df_train["input_text"].head(1))
# pd.reset_option('display.max_colwidth')

import re

def extract_after_first_newline(text: str):
    parts = text.split("\n", 1)
    return parts[0].strip(), parts[1].strip()

from sklearn.model_selection import train_test_split

val_df, test_df = train_test_split(
    preprocessed_df_val,
    test_size=1/3,
    random_state=42
)
train_dataset = Dataset.from_pandas(preprocessed_df_train)
val_dataset = Dataset.from_pandas(val_df)

test_df.to_csv("test_data.tsv", sep="\t", index=False)
print("Saved test_df to test_data.tsv")

"""**Retrievals**"""

from sentence_transformers import SentenceTransformer, util

# Load embedding model
embed_model = SentenceTransformer('all-MiniLM-L6-v2')

def retrieve_relevant_chunk(question, context, max_tokens=500):
    # Split paragraphs
    paragraphs = [p.strip() for p in context.split("\n") if p.strip()]

    paragraph_embeddings = embed_model.encode(paragraphs, convert_to_tensor=True)
    question_embedding = embed_model.encode(question, convert_to_tensor=True)

    # Compute cosine similarities
    similarities = util.cos_sim(question_embedding, paragraph_embeddings)[0]

    # Rank paragraphs
    ranked_idx = similarities.argsort(descending=True)

    # Collect chunks until max_tokens
    selected_text = ""
    token_count = 0
    for idx in ranked_idx:
        para = paragraphs[idx]
        para_tokens = len(para.split())  # crude token estimate
        if token_count + para_tokens <= max_tokens:
            selected_text += para + " "
            token_count += para_tokens
        if token_count >= max_tokens:
            break

    return selected_text.strip(), token_count

def preprocess(example):
    question, context = extract_after_first_newline(example["input_text"])
    retrieved_context , _ = retrieve_relevant_chunk(question, context, max_tokens=500)
    new_input = question+" \n "+retrieved_context

    model_inputs = tokenizer(
        new_input,
        truncation=True,
        padding=True
    )

    labels = tokenizer(
        example["target_text"],
        truncation=True,
        padding=True
    )

    model_inputs["labels"] = labels["input_ids"]
    return model_inputs

# question, context = extract_after_first_newline("Who was the widow affected by the Same-sex marriage decision ruled on by the Sixth Circuit from Ohio? \n Bourke v. Beshear: The lead cases on same-sex marriage in Kentucky are Bourke v. Beshear, and its companion case Love v. Beshear.  In Bourke, a U.S. district court found that the Equal Protection Clause requires Kentucky to recognize valid same-sex marriages from other jurisdictions.  In Love, the same court found that this same clause renders Kentuckys ban on same-sex marriage unconstitutional.  Both decisions were stayed and consolidated upon appeal to the Sixth Circuit Court of Appeals, which heard oral arguments in both cases on August 6, 2014.  On November 6, the Sixth Circuit upheld Kentuckys ban on same-sex marriage. \n Same-sex marriage in Mississippi: Same-sex marriage is legal in Mississippi.  On November 25, 2014, U.S. District Court Judge Carlton W. Reeves of the District Court for Southern Mississippi, ruled Mississippis ban on same-sex marriage unconstitutional.  Enforcement of his ruling was stayed pending appeal to the Fifth Circuit Court of Appeals.  On June 26, 2015, the U.S. Supreme Court ruled in Obergefell v. Hodges that the denial of marriage rights to same-sex couples is unconstitutional.  On June 29, the state attorney general ordered clerks to issue marriage licenses to same-sex couples.  On July 1, the Fifth Circuit lifted its stay and Judge Reeves ordered an end to Mississippis enforcement of its same-sex marriage ban.  However, until July 2, 2015, several counties in Mississippi continued to refuse to issue same-sex couple marriage licenses, including DeSoto, Jasper, Jones, Newton, Pontotoc, Simpson and Yalobusha. \n Tanco v. Haslam: Tanco v. Haslam was the lead case in the dispute of same-sex marriage in Tennessee.  A U.S. District Court granted a preliminary injunction requiring the state to recognize the marriages of the plaintiffs, three same-sex couples.  The court found the equal protection analysis used in Bourke v. Beshear, a case dealing with a comparable Kentucky statute especially persuasive.  On April 25, 2014, that injunction was stayed by the Sixth Circuit Court of Appeals.  Tanco was appealed to the Sixth Circuit, which reversed the district court and upheld Tennessees refusal to recognize same-sex marriages from other jurisdictions on November 6. \n DeBoer v. Snyder: DeBoer v. Snyder is a lawsuit that was filed by April DeBoer and Jane Rowse on January 23, 2012 in federal district court, challenging Michigans ban on adoption by same-sex couples so they can jointly adopt their children.  In August 2012, Judge Bernard A. Friedman invited the couple to amend their suit to challenge the states ban on same-sex marriage, the underlying issue.  Following a hearing on October 16, 2013, Friedman scheduled a trial that ran from February 25 to March 7, 2014.  On March 21, Judge Friedman issued his ruling overturning the ban.  On March 22, the United States Court of Appeals for the Sixth Circuit placed a temporary hold on Judge Friedmans ruling.  The appeal was argued on August 6.  On November 6, the Sixth Circuit reversed Judge Friedman and upheld Michigans ban on same-sex marriage. \n Same-sex marriage by Circuit Court: Prior to the landmark ruling United States v. Windsor, the constitutionality of banning same-sex marriage was upheld by the Eighth Circuit in Citizens for Equal Protection v. Bruning.  After the Windsor ruling, many same-sex marriage bans were struck down by lower courts.  The Tenth, Fourth, Seventh, and Ninth circuits all ruled that same-sex marriage bans were unconstitutional.  The cases that made it to these circuit courts originated in district courts which for the most part also struck down same-sex marriage bans.  When a circuit court struck down a states same-sex marriage ban, it did not directly strike down same-sex marriage bans in other states within the circuit.  However, it paved the way for same-sex marriage bans to be struck down in the entire circuit due to the precedent it set for district courts within the circuit to follow.  In some states, same-sex marriage was already legal before a federal circuit court ruled on the matter.  The Sixth Circuit ruled that same-sex marriage bans were not unconstitutional and reversed the district court rulings that struck down same-sex marriage bans.  Since this was the only circuit court to rule this way post-Windsor, this created a circuit split which ultimately led to the Supreme Court of the United States deciding to resolve the issue once and for all.  They ruled that same-sex marriage bans violate the constitution in the landmark ruling Obergefell v. Hodges which was the consolidated case that covered each state in the Sixth Circuit.  Some circuit courts have not ruled on the constitutionality of same-sex marriage bans at all.  Many circuit courts had pending same-sex marriage cases, but decided to hold off on litigation until the Supreme Court ruled on the matter. \n Same-sex marriage in Arkansas: Same-sex marriage in Arkansas is legal under the U.S. Supreme Court decision in Obergefell v. Hodges, a landmark case in which same-sex marriage bans were struck down on June 26, 2015.  Prior to that, same-sex marriage in Arkansas was briefly legal for a period beginning on May 9, 2014, as the result of a ruling by Sixth Judicial Circuit Judge Chris Piazza, striking down the states constitutional and legislative ban on same-sex marriage as violating the Constitution of the United States.  Approximately 541 same-sex couples received marriage licenses in several Arkansas counties before the Arkansas Supreme Court stayed his ruling pending appeal on May 16, 2014. \n Same-sex marriage in Ohio: Same-sex marriage in Ohio is legal under the U.S. Supreme Court ruling in Obergefell v. Hodges, a landmark decision in which the court struck down Ohios statutory and constitutional bans on the issuance of marriage licenses to same-sex couples on June 26, 2015.  The case was named after plaintiff Jim Obergefell, who sued the state of Ohio after officials refused to recognize his marriage on the death certificate of his husband.  Same-sex marriages were performed in Ohio beginning shortly after the Supreme Court released its ruling, as local officials implemented the order. \n Same-sex marriage in New Mexico: Same-sex marriage became legally recognized statewide in New Mexico through a ruling by the New Mexico Supreme Court on December 19, 2013, requiring all county clerks to issue marriage licenses to qualified couples seeking marriage regardless of gender.  Until then, same-sex couples could only obtain marriage licenses in certain counties of the state.  Eight of 33 counties, covering 58% of the states population, had begun issuing marriage licenses to same-sex couples in August and September 2013.  New Mexicos marriage statute is not specific as to gender.  It is the only state lacking a state statute or constitutional provision explicitly addressing same-sex marriage.  Lacking a state law or judicial ruling concerning same-sex marriage prior to December 19, 2013, policy for the issuance of marriage licenses to same-sex couples was determined at the county level at the discretion of local issuing authorities.  That is, some counties recognized same-sex marriage and issued marriage licenses to same-sex couples, while others did not.  Despite the ruling by the New Mexico Supreme Court allowing same-sex marriages in the state, some of New Mexicos Native American tribes (most notably the Navajo Nation) continue to prohibit same-sex marriages within their jurisdictions and do not recognize same-sex marriages performed elsewhere. \n Same-sex marriage in the Seventh Circuit: On September 4, 2014 the Seventh Circuit Court of Appeals unanimously upheld district court rulings striking down same-sex marriage bans in Indiana, and Wisconsin, just nine days after the court heard oral arguments.  The Seventh Circuit consists of Illinois, Indiana, and Wisconsin.  Same-sex marriage was already legal in Illinois before the Circuit Courts decision.  Same-sex marriages were performed in Indiana and Wisconsin after their bans were struck down by district courts and before those decisions were stayed.  Recognition of out-of-state same-sex marriage was possibly de jure legal in Indiana until Baskin v. Bogan was stayed by the Seventh Circuit.  On October 6, 2014, the Supreme Court of the United States denied cert, legalizing same-marriage in both Indiana and Wisconsin.  As a result, same-sex marriage is legal in every state within the circuit. \n Same-sex marriage in the Sixth Circuit: On April 28, 2015, the Supreme Court of the United States heard oral arguments for Obergefell v. Hodges (Ohio), which was consolidated with three other same-sex marriage cases from the other states in the Sixth Circuit: Tanco v. Haslam (Tennessee), DeBoer v. Snyder (Michigan), Bourke v. Beshear (Kentucky).  On June 26, 2015 the Supreme Court reversed the Sixth Circuits decision, paving the way for same-sex marriage to become legal in those states, and setting a precedent for the entire nation.  All four states complied with the ruling the same day it was issued before the mandate was actually issued.  Every state in the circuit had a district court ruling against their states ban, but they were eventually stayed pending appeal.  The Sixth Circuit consists of Kentucky, Michigan, Ohio, and Tennessee.  On August 6, 2014, the Sixth Circuit heard oral arguments for same-sex marriage cases from each state within the circuit.  On November 6, 2014, the Sixth Circuit in a split 2-1 decision, upheld the states same-sex marriage bans, reversing the district courts rulings that struck them down.  The Sixth Circuit was the first and only circuit court since the landmark ruling United States v. Windsor to uphold the constitutionality of states same-sex marriage bans which caused a circuit spli")
# retrieved_context , _ = retrieve_relevant_chunk(question, context, max_tokens=500)
# print(retrieved_context)

tokenized_train = train_dataset.map(preprocess)
tokenized_val = val_dataset.map(preprocess)

training_args = Seq2SeqTrainingArguments(
    output_dir="./unifiedqa_finetuned",
    eval_strategy="epoch",
    save_strategy="epoch",
    learning_rate=2e-5,
    per_device_train_batch_size=4,
    per_device_eval_batch_size=4,
    num_train_epochs=3,
    weight_decay=0.01,
    logging_dir="./logs",
    logging_steps=50,
    predict_with_generate=True,
    save_total_limit=2,
    report_to=[],
)

trainer = Seq2SeqTrainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_train,
    eval_dataset=tokenized_val,
    tokenizer=tokenizer,
)

trainer.train()

save_dir = "./unifiedqa_hotpotqa_model"

trainer.save_model(save_dir)
tokenizer.save_pretrained(save_dir)

"""# Model class"""

class UnifiedQAWithRetrieval:
    def __init__(self, model, tokenizer, embed_model):
        self.model = model
        self.tokenizer = tokenizer
        self.embed_model = embed_model

    @staticmethod
    def extract_after_first_newline(text: str):
        parts = text.split("\n", 1)
        return parts[0].strip(), parts[1].strip()

    def retrieve_relevant_chunk(self, question, context, max_tokens=500):
        paragraphs = [p.strip() for p in context.split("\n") if p.strip()]
        paragraph_embeddings = self.embed_model.encode(paragraphs, convert_to_tensor=True)
        question_embedding = self.embed_model.encode(question, convert_to_tensor=True)

        similarities = util.cos_sim(question_embedding, paragraph_embeddings)[0]
        ranked_idx = similarities.argsort(descending=True)

        selected_text = ""
        token_count = 0
        for idx in ranked_idx:
            para = paragraphs[idx]
            para_tokens = len(para.split())
            if token_count + para_tokens <= max_tokens:
                selected_text += para + " "
                token_count += para_tokens
            if token_count >= max_tokens:
                break

        return selected_text.strip()

    def answer_question(self, input_text, **generate_kwargs):
        question, context = self.extract_after_first_newline(input_text)
        retrieved_context = self.retrieve_relevant_chunk(question, context)
        final_input = question + " \n " + retrieved_context

        inputs = self.tokenizer(final_input, return_tensors="pt", truncation=True, padding=True)
        output_ids = self.model.generate(**inputs, **generate_kwargs)
        return self.tokenizer.decode(output_ids[0], skip_special_tokens=True)


# Load your model and embedding model
model_name = "./unifiedqa_hotpotqa_model"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)
embed_model = SentenceTransformer('all-MiniLM-L6-v2')

import pickle

# Create the QA system object
qa_system = UnifiedQAWithRetrieval(model, tokenizer, embed_model)

# Save it to a pickle file
with open("unifiedqa_with_retrieval.pkl", "wb") as f:
    pickle.dump(qa_system, f)

print("QA system saved as unifiedqa_with_retrieval.pkl")